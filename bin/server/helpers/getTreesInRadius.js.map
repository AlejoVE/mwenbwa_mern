{"version":3,"sources":["../../../src/server/helpers/getTreesInRadius.js"],"names":["TreeModel","require","getTreesInRadius","id","tree","findById","_id","lat","lon","deg","treesInSquare","find","$gt","$lt","center","radius","treesInRadius","Array","forEach","isInRadius","push","err","console","log"],"mappings":";;;;;;;AACA;;AADA,MAAMA,SAAS,GAAGC,OAAO,CAAE,sBAAF,CAAzB;;AAIO,MAAMC,gBAAgB,GAAI,MAAOC,EAAP,IAAa;AAE1C,MAAG;AACC,UAAMC,IAAI,GAAG,MAAMJ,SAAS,CAACK,QAAV,CAAmB;AAACC,MAAAA,GAAG,EAAEH;AAAN,KAAnB,CAAnB;AACA,QAAII,GAAG,GAAGH,IAAI,CAACG,GAAf;AACA,QAAIC,GAAG,GAAGJ,IAAI,CAACI,GAAf;AAEA,UAAMC,GAAG,GAAG,UAAZ;AAGA,UAAMC,aAAa,GAAG,MAAMV,SAAS,CAACW,IAAV,CAAe;AACvC,aAAO;AACHC,QAAAA,GAAG,EAAEL,GAAG,GAAGE,GADR;AACcI,QAAAA,GAAG,EAAEN,GAAG,GAAGE;AADzB,OADgC;AAGpC,aAAO;AACNG,QAAAA,GAAG,EAAEJ,GAAG,GAAGC,GADL;AACWI,QAAAA,GAAG,EAAEL,GAAG,GAAGC;AADtB;AAH6B,KAAf,CAA5B;AAQA,UAAMK,MAAM,GAAG;AAACP,MAAAA,GAAG,EAAEA,GAAN;AAAWC,MAAAA,GAAG,EAAEA;AAAhB,KAAf;AACA,UAAMO,MAAM,GAAG,GAAf;AAEA,UAAMC,aAAa,GAAG,IAAIC,KAAJ,EAAtB;AAEAP,IAAAA,aAAa,CAACQ,OAAd,CAAsBd,IAAI,IAAG;AACzB,YAAMe,UAAU,GAAG,oCAAa;AAACZ,QAAAA,GAAG,EAAEH,IAAI,CAACG,GAAX;AAAgBC,QAAAA,GAAG,EAAEJ,IAAI,CAACI;AAA1B,OAAb,EAA6CM,MAA7C,EAAqDC,MAArD,CAAnB;AAEA,UAAGI,UAAH,EACIH,aAAa,CAACI,IAAd,CAAmBhB,IAAnB;AACP,KALD;AAOA,WAAOY,aAAP;AAEH,GA9BD,CA8BE,OAAMK,GAAN,EAAW;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAEJ,CApCM","sourcesContent":["const TreeModel = require ('../models/TreeSchema')\nimport {insideCircle} from 'geolocation-utils'\n\n\nexport const getTreesInRadius =  async (id) =>{\n\n    try{\n        const tree = await TreeModel.findById({_id: id})\n        let lat = tree.lat;\n        let lon = tree.lon;\n        // 1° = 111km => 100m = 0,00090009° conversion\n        const deg = 0.00090009;\n        \n        // get trees\n        const treesInSquare = await TreeModel.find({\n            \"lat\": {\n                $gt: lat - deg , $lt: lat + deg \n            }, \"lon\": {\n                $gt: lon - deg , $lt: lon + deg \n            }\n        })\n\n        const center = {lat: lat, lon: lon}\n        const radius = 100 // meters\n\n        const treesInRadius = new Array()\n        \n        treesInSquare.forEach(tree =>{\n            const isInRadius = insideCircle({lat: tree.lat, lon: tree.lon}, center, radius)\n\n            if(isInRadius)\n                treesInRadius.push(tree)\n        })\n        \n        return treesInRadius\n\n    } catch(err) {\n        console.log(err)\n    }\n    \n}"],"file":"getTreesInRadius.js"}